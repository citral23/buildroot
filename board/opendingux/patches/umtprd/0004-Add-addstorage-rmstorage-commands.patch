From 06f03e406af3f3fcf02741e33cb915744ec54683 Mon Sep 17 00:00:00 2001
From: Paul Cercueil <paul@crapouillou.net>
Date: Wed, 31 Mar 2021 19:55:27 +0100
Subject: [PATCH 4/5] Add addstorage/rmstorage commands

This pair of commands can be used to dynamically add storages at
runtime.

Examples:

umtprd '-cmd:addstorage:/tmp Tmp rw'
umtprd '-cmd:rmstorage:Tmp'

Use double-quotes when arguments have spaces in them:

umtprd '-cmd:addstorage:/path "My Path" rw,removable'
umtprd '-cmd:rmstorage:"My Path"'

Signed-off-by: Paul Cercueil <paul@crapouillou.net>
---
 inc/mtp.h      |  1 +
 inc/mtp_cfg.h  |  2 ++
 src/msgqueue.c |  9 +++++++++
 src/mtp.c      | 18 ++++++++++++++++++
 src/mtp_cfg.c  | 27 +++++++++++++++++++++++----
 5 files changed, 53 insertions(+), 4 deletions(-)

diff --git a/inc/mtp.h b/inc/mtp.h
index 0ab09df..224d168 100644
--- a/inc/mtp.h
+++ b/inc/mtp.h
@@ -142,6 +142,7 @@ void mtp_set_usb_handle(mtp_ctx * ctx, void * handle, uint32_t max_packet_size);
 int mtp_load_config_file(mtp_ctx * context, const char * conffile);
 
 uint32_t mtp_add_storage(mtp_ctx * ctx, char * path, char * description, uint32_t flags);
+int mtp_remove_storage(mtp_ctx * ctx, char * name);
 int mtp_get_storage_index_by_name(mtp_ctx * ctx, char * name);
 uint32_t mtp_get_storage_id_by_name(mtp_ctx * ctx, char * name);
 char * mtp_get_storage_description(mtp_ctx * ctx, uint32_t storage_id);
diff --git a/inc/mtp_cfg.h b/inc/mtp_cfg.h
index 6ac825c..f0d3dd0 100644
--- a/inc/mtp_cfg.h
+++ b/inc/mtp_cfg.h
@@ -27,4 +27,6 @@
 #include "mtp.h"
 
 int mtp_create_storage(mtp_ctx * context);
+void mtp_add_storage_from_line(mtp_ctx *context, char *line, int idx);
+int mtp_remove_storage_from_line(mtp_ctx * context, char * name, int idx);
 #endif
diff --git a/src/msgqueue.c b/src/msgqueue.c
index ca10c29..88f32ec 100644
--- a/src/msgqueue.c
+++ b/src/msgqueue.c
@@ -41,6 +41,7 @@
 #include <errno.h>
 
 #include "mtp.h"
+#include "mtp_cfg.h"
 #include "mtp_helpers.h"
 #include "mtp_constant.h"
 #include "mtp_datasets.h"
@@ -89,6 +90,14 @@ void* msgqueue_thread( void* arg )
 		{
 			PRINT_DEBUG("msgqueue_thread : New message received : %s",msg_buf.mesg_text);
 
+			if (!strncmp(msg_buf.mesg_text,"addstorage:", 11)) {
+				mtp_add_storage_from_line(ctx, &msg_buf.mesg_text[11], 0);
+			}
+
+			if (!strncmp(msg_buf.mesg_text,"rmstorage:", 10)) {
+				mtp_remove_storage_from_line(ctx, &msg_buf.mesg_text[10], 0);
+			}
+
 			if(!strncmp((char*)&msg_buf.mesg_text,"mount:",6))
 			{
 				store_index = mtp_get_storage_index_by_name(ctx, (char*)&msg_buf.mesg_text + 6);
diff --git a/src/mtp.c b/src/mtp.c
index 7d7f25c..c20637f 100644
--- a/src/mtp.c
+++ b/src/mtp.c
@@ -692,6 +692,24 @@ uint32_t mtp_add_storage(mtp_ctx * ctx, char * path, char * description, uint32_
 	return 0x00000000;
 }
 
+int mtp_remove_storage(mtp_ctx * ctx, char * name)
+{
+	int index = mtp_get_storage_index_by_name(ctx, name);
+
+	if (index < 0)
+		return index;
+
+	free(ctx->storages[index].root_path);
+	free(ctx->storages[index].description);
+
+	ctx->storages[index].root_path = NULL;
+	ctx->storages[index].description = NULL;
+	ctx->storages[index].flags = 0x00000000;
+	ctx->storages[index].storage_id = 0x00000000;
+
+	return 0;
+}
+
 uint32_t mtp_get_storage_id_by_name(mtp_ctx * ctx, char * name)
 {
 	int i;
diff --git a/src/mtp_cfg.c b/src/mtp_cfg.c
index 93ca725..a995b73 100644
--- a/src/mtp_cfg.c
+++ b/src/mtp_cfg.c
@@ -241,7 +241,21 @@ int test_flag(char * str, char * flag)
 	return 0;
 }
 
-static int get_storage_params(mtp_ctx * context, char * line,int cmd)
+int mtp_remove_storage_from_line(mtp_ctx * context, char * name, int idx)
+{
+	char storagename[MAX_CFG_STRING_SIZE];
+	int i;
+
+	i = get_param(name, idx, storagename);
+	if (i < 0)
+		return i;
+
+	PRINT_MSG("Remove storage %s", storagename);
+
+	return mtp_remove_storage(context, storagename);
+}
+
+void mtp_add_storage_from_line(mtp_ctx * context, char * line, int idx)
 {
 	int i, j, k;
 	char storagename[MAX_CFG_STRING_SIZE];
@@ -249,13 +263,13 @@ static int get_storage_params(mtp_ctx * context, char * line,int cmd)
 	char options[MAX_CFG_STRING_SIZE];
 	uint32_t flags;
 
-	i = get_param(line, 2,storagename);
-	j = get_param(line, 1,storagepath);
+	i = get_param(line, idx + 1,storagename);
+	j = get_param(line, idx,storagepath);
 	flags = UMTP_STORAGE_READWRITE;
 
 	if( i >= 0 && j >= 0 )
 	{
-		k = get_param(line, 3,options);
+		k = get_param(line, idx + 2,options);
 		if( k >= 0 )
 		{
 			if(test_flag(options, "ro"))
@@ -283,6 +297,11 @@ static int get_storage_params(mtp_ctx * context, char * line,int cmd)
 
 		mtp_add_storage(context, storagepath, storagename, flags);
 	}
+}
+
+static int get_storage_params(mtp_ctx * context, char * line,int cmd)
+{
+	mtp_add_storage_from_line(context, line, 1);
 
 	return 0;
 }
-- 
2.30.2

